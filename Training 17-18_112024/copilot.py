# Python Sets Tutorial
# Множества (sets) - это неупорядоченные коллекции уникальных элементов

# 1. Создание множества
empty_set = set()  # Пустое множество
numbers = {1, 2, 3, 4, 5}  # Множество с числами
mixed_set = {1, "hello", (1, 2)}  # Множество с разными типами данных

# 2. Основные операции с множествами
# Добавление элемента
numbers.add(6)  # Добавляет один элемент
numbers.update([7, 8, 9])  # Добавляет несколько элементов

# Удаление элементов
numbers.remove(9)  # Удаляет элемент (вызывает ошибку, если элемента нет)
numbers.discard(10)  # Удаляет элемент (не вызывает ошибку, если элемента нет)
popped = numbers.pop()  # Удаляет и возвращает случайный элемент
numbers.clear()  # Очищает множество

# 3. Операции над множествами
set1 = {1, 2, 3, 4}
set2 = {3, 4, 5, 6}

# Объединение множеств
union_set = set1 | set2  # или set1.union(set2)
print("Объединение:", union_set)  # {1, 2, 3, 4, 5, 6}

# Пересечение множеств
intersection_set = set1 & set2  # или set1.intersection(set2)
print("Пересечение:", intersection_set)  # {3, 4}

# Разность множеств
difference_set = set1 - set2  # или set1.difference(set2)
print("Разность set1 - set2:", difference_set)  # {1, 2}

# Симметрическая разность
symmetric_diff = set1 ^ set2  # или set1.symmetric_difference(set2)
print("Симметрическая разность:", symmetric_diff)  # {1, 2, 5, 6}

# 4. Проверка отношений между множествами
set3 = {1, 2}
print("Является ли подмножеством:", set3 <= set1)  # True
print("Является ли надмножеством:", set1 >= set3)  # True
print("Есть ли общие элементы:", set1.isdisjoint(set2))  # False

# 5. Особенности множеств
# - Элементы должны быть неизменяемыми (числа, строки, кортежи)
# - Порядок элементов не гарантируется
# - Все элементы уникальны
# - Нельзя использовать индексы для доступа к элементам

# Пример удаления дубликатов из списка с помощью множества
duplicates_list = [1, 2, 2, 3, 3, 4, 5, 5]
unique_list = list(set(duplicates_list))
print("Список без дубликатов:", unique_list)

# 6. Проверка на наличие элемента
print("Есть ли 3 в set1:", 3 in set1)  # True

# 7. Замороженные множества (неизменяемые)
frozen_set = frozenset([1, 2, 3])
# frozen_set.add(4)  # Вызовет ошибку, так как множество неизменяемо
